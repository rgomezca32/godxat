name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configuración específica para Linux (Ubuntu )
      - name: Build AppImage in Ubuntu 20.04 Docker container
        if: matrix.platform == 'ubuntu-latest'
        run: |
          # Construir la imagen Docker
          docker build -t tauri-builder:20.04 -f Dockerfile.build .
          
          # Ejecutar la compilación dentro del contenedor
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -e TAURI_SIGNING_PRIVATE_KEY="${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}" \
            -e TAURI_SIGNING_PRIVATE_KEY_PASSWORD="${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}" \
            tauri-builder:20.04 \
            bash -c "cd frontend && npm ci && npm run tauri:build"

      # Configuración para macOS
      - name: Install dependencies (macOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          # Tus comandos para macOS

      # Configuración para Windows
      - name: Install dependencies (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          # Tus comandos para Windows

      # Pasos comunes para macOS y Windows
      - name: Setup Node (macOS and Windows)
        if: matrix.platform != 'ubuntu-latest'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup Rust (macOS and Windows)
        if: matrix.platform != 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install frontend dependencies (macOS and Windows)
        if: matrix.platform != 'ubuntu-latest'
        run: |
          cd frontend
          npm ci

      - name: Install Tauri CLI (macOS and Windows)
        if: matrix.platform != 'ubuntu-latest'
        run: npm install -g @tauri-apps/cli@2.5.0

      - name: Build the app (macOS and Windows)
        if: matrix.platform != 'ubuntu-latest'
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        run: |
          cd frontend
          npm run tauri:build

      # Subir artefactos (común para todas las plataformas)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.platform }}
          path: |
            frontend/src-tauri/target/release/bundle/msi/*.msi
            frontend/src-tauri/target/release/bundle/nsis/*.exe
            frontend/src-tauri/target/release/bundle/dmg/*.dmg
            frontend/src-tauri/target/release/bundle/appimage/*.AppImage

  publish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/artifacts-windows-latest/**/*.msi
            artifacts/artifacts-windows-latest/**/*.exe
            artifacts/artifacts-macos-latest/**/*.dmg
            artifacts/artifacts-ubuntu-latest/**/*.AppImage
          draft: true
          generate_release_notes: true
